# service mysql
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: mysql
#   name: mysql
# spec:
#   selector:
#     app: mysql
#   ports:
#     - port: 3306
#       targetPort: 3306
---
# deployment mysql
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mysql
#   labels:
#     app: mysql
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mysql
#   template:
#     metadata:
#       labels:
#         app: mysql
#     spec:
#       containers:
#       - name: mysql
#         image: mysql:8.0.33
#         ports:
#         - containerPort: 3306
#         env:
#         - name: MYSQL_ALLOW_EMPTY_ROOT_PASSWORD
#           value: "0"
#         - name: MYSQL_USER
#           value: user
#         - name: MYSQL_PASSWORD
#           value: pw
#         - name: MYSQL_ROOT_PASSWORD
#           value: pw
#         - name: MYSQL_DATABASE
#           value: db
---
# service ymirblog
apiVersion: v1
kind: Service
metadata:
  name: ymirblog
  labels:
    app: ymirblog
spec:
  selector:
    app: ymirblog
  ports:
  - port: 80
    name: http
    targetPort: 8007
  type: NodePort
---
# deployment ymirblog
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ymirblog
spec:
  selector:
    matchLabels:
      app: ymirblog
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ymirblog
    spec:
      containers:
      - name: ymirblog
        image: adityaeka26/ymirblog:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8007
          name: ymirblog
        resources:
          requests:
            cpu: 50m
        env:
        - name: YMIRBLOG_MYSQL_DATABASE
          value: db
        - name: YMIRBLOG_MYSQL_USER
          value: user
        - name: YMIRBLOG_MYSQL_PASSWORD
          value: leomessi
        - name: YMIRBLOG_MYSQL_HOST
          value: "10.32.160.3"
        - name: YMIRBLOG_MYSQL_PORT
          value: "3306"
---
# autoscaling ymirblog
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ymirblog
spec:
  maxReplicas: 3
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ymirblog
  targetCPUUtilizationPercentage: 100
---
# ingress local (minikube)
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ymirblog
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#     - host: ymirblog.info
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: ymirblog
#                 port:
#                   number: 8007
---
# ingress production
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ymirblog
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: ymirblog
    # nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: ymirblog.adityaeka.my.id
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: ymirblog
              port: 
                number: 80
---
# ssl
# apiVersion: networking.gke.io/v1
# kind: ManagedCertificate
# metadata:
#   name: ymirblog
# spec:
#   domains:
#     - ymirblog.adityaeka.my.id